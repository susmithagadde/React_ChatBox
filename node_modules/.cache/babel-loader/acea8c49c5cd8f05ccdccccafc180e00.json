{"ast":null,"code":"export function PostData(userData) {\n  let BaseUrl = \"http://localhost/login/api/demo.php\";\n  var formData = new FormData();\n  formData.append(\"content\", \"test2\", \"ds\", \"test2\");\n  console.log(JSON.stringify(userData));\n  return new Promise((resolve, reject) => {\n    fetch(BaseUrl, {\n      method: \"POST\",\n      body: {\n        json: JSON.stringify(userData)\n      }\n    }).then(response => response.json()).then(responseJson => {\n      resolve(responseJson);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["D:\\login\\src\\postdata.jsx"],"names":["PostData","userData","BaseUrl","formData","FormData","append","console","log","JSON","stringify","Promise","resolve","reject","fetch","method","body","json","then","response","responseJson","catch","error"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,QAAlB,EAA4B;AACjC,MAAIC,OAAO,GAAG,qCAAd;AACA,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,OAA3B,EAAoC,IAApC,EAA0C,OAA1C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAZ;AACA,SAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,IAAAA,KAAK,CAACX,OAAD,EAAU;AACbY,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAER,IAAI,CAACC,SAAL,CAAeR,QAAf;AADF;AAFO,KAAV,CAAL,CAMGgB,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACF,IAAT,EANpB,EAOGC,IAPH,CAOQE,YAAY,IAAI;AACpBR,MAAAA,OAAO,CAACQ,YAAD,CAAP;AACD,KATH,EAUGC,KAVH,CAUSC,KAAK,IAAI;AACdT,MAAAA,MAAM,CAACS,KAAD,CAAN;AACD,KAZH;AAaD,GAdM,CAAP;AAeD","sourcesContent":["export function PostData(userData) {\r\n  let BaseUrl = \"http://localhost/login/api/demo.php\";\r\n  var formData = new FormData();\r\n  formData.append(\"content\", \"test2\", \"ds\", \"test2\");\r\n\r\n  console.log(JSON.stringify(userData));\r\n  return new Promise((resolve, reject) => {\r\n    fetch(BaseUrl, {\r\n      method: \"POST\",\r\n      body: {\r\n        json: JSON.stringify(userData)\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        resolve(responseJson);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}